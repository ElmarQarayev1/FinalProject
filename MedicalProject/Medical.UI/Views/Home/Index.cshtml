   <!-- Sale & Revenue Start -->



<div class="container-fluid pt-4 px-4">
    <div class="row g-4">

        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-dollar-sign fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Daily Orders Price: <span id="daily-sale"></span></p>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-dollar-sign fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Monthly Orders Price: <span id="monthly-sale"></span></p>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-calendar-day fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Monthly Orders Count: <span id="monthly-orders"></span></p>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-calendar-day fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Daily Orders Count: <span id="daily-orders"></span></p>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-calendar-check fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Daily Appointments Count: <span id="daily-appointments"></span></p>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-calendar-alt fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Yearly Appointments Count: <span id="monthly-appointments"></span></p>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-hourglass-half fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Pending Reviews Count: <span id="pending-reviews"></span></p>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-file-excel fa-3x text-primary"></i>
                <div class="ms-3">
                    <a asp-action="ExportToExcel" asp-controller="Home" class="btn btn-sm btn-primary">Export to Excel</a>
                </div>
            </div>
        </div>

    </div>
</div>
<!-- Sale & Revenue End -->
<!-- Sales Chart Start -->
<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-sm-12 col-xl-6">
            <div class="card-body">

            </div>
        </div>
        <div class="col-12">
            <div class="bg-secondary text-center rounded p-4">
                <h5 class="mb-4">Monthly Appointments Count</h5>
                <canvas id="monthlyAppointmentsChart" width="500" height="200"></canvas>

            </div>
        </div>
        <div class="col-12">
            <div class="bg-secondary text-center rounded p-4">
                <h5 class="mb-4">Yearly Orders Price</h5>
                <canvas id="yearlyOrdersChart" width="500" height="200"></canvas>
            </div>
        </div>


        <div class="col-12">
            <div class="bg-secondary text-center rounded p-4" style="width: 600px; margin:auto;">
                <h5 class="mb-4">Order Status Distribution</h5>


                <canvas id="orderStatusChart" class="chart-canvas" style="width:50px; height:50px;"></canvas>
            </div>
        </div>

    </div>
</div>

<!-- Sale & Revenue Start -->
<div class="container-fluid pt-4 px-4">
    <div class="row g-4 justify-content-center align-items-center">
        <div class="col-sm-12 col-md-6 col-xl-4 d-flex justify-content-center">
            <div class="h-100 bg-secondary rounded p-4 text-center">
                <div class="d-flex justify-content-between mb-4">
                    <h6 class="mb-0">Calendar</h6>
                    <a href="#">Show All</a>
                </div>
                <div id="calender"></div>
            </div>
        </div>
    </div>
</div>
<!-- Sale & Revenue End -->
<!-- Widgets Start -->
<!-- Widgets End -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>document.addEventListener("DOMContentLoaded", function () {
        async function fetchData() {
            try {
                let response = await fetch('/Home/GetTodayOrdersTotalPrice');
                let dailySale = await response.json();
                document.getElementById('daily-sale').textContent = dailySale;

                response = await fetch('/Home/GetMonthlyOrdersTotalPrice');
                let monthlySale = await response.json();
                document.getElementById('monthly-sale').textContent = monthlySale;

                response = await fetch('/Home/GetMonthlyOrdersCount');
                let monthlyOrders = await response.json();
                document.getElementById('monthly-orders').textContent = monthlyOrders;

                response = await fetch('/Home/GetTodayOrdersCount');
                let dailyOrders = await response.json();
                document.getElementById('daily-orders').textContent = dailyOrders;

                response = await fetch('/api/admin/daily-count');
                let dailyAppointments = await response.json();
                document.getElementById('daily-appointments').textContent = dailyAppointments;

                response = await fetch('/api/admin/Reviews/PendingCount');
                let pendingReviews = await response.json();
                document.getElementById('pending-reviews').textContent = pendingReviews;

                response = await fetch('/api/admin/yearly-count');
                let yearlyAppointments = await response.json();
                document.getElementById('monthly-appointments').textContent = yearlyAppointments;

                response = await fetch('/api/admin/monthly-count');
                let monthlyData = await response.json();

                console.log('Yearly Data:', monthlyData);

                if (monthlyData.months && monthlyData.appointments) {
                    var ctx = document.getElementById('monthlyAppointmentsChart').getContext('2d');

                    var monthlyAppointmentsChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: monthlyData.months,
                            datasets: [{
                                label: 'Monthly Appointments',
                                data: monthlyData.appointments,
                                backgroundColor: 'rgba(255, 0, 0, 0.2)',
                                borderColor: 'red',
                                borderWidth: 2,
                                fill: true
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    suggestedMax: Math.max(...monthlyData.appointments) + 10,
                                    ticks: {
                                        stepSize: 5
                                    }
                                },
                                x: {
                                    ticks: {
                                        autoSkip: false
                                    }
                                }
                            },
                            responsive: true
                        }
                    });
                } else {
                    console.error('Data is null or not in expected format:', monthlyData);
                }




            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }


        fetchData();
    });</script>

<script>document.addEventListener("DOMContentLoaded", function () {
        async function fetchData() {
            try {
                let response = await fetch('/api/admin/order-status-counts');

                if (response.ok) {
                    let orderStatusCounts = await response.json();
                    console.log('Order Status Counts:', orderStatusCounts);

                    if (orderStatusCounts) {
                        var pieCtx = document.getElementById('orderStatusChart').getContext('2d');

                        var orderStatusChart = new Chart(pieCtx, {
                            type: 'pie',
                            data: {
                                labels: ['Accepted', 'Rejected', 'Pending'],
                                datasets: [{
                                    data: [
                                        orderStatusCounts.acceptedCount,
                                        orderStatusCounts.rejectedCount,
                                        orderStatusCounts.pendingCount
                                    ],
                                    backgroundColor: [
                                        'rgba(75, 192, 192, 0.2)',
                                        'rgba(255, 99, 132, 0.2)',
                                        'rgba(255, 206, 86, 0.2)'
                                    ],
                                    borderColor: [
                                        'rgba(75, 192, 192, 1)',
                                        'rgba(255, 99, 132, 1)',
                                        'rgba(255, 206, 86, 1)'
                                    ],
                                    borderWidth: 2
                                }]
                            },
                            options: {
                                responsive: true,

                                plugins: {
                                    legend: {
                                        position: 'top',
                                    },
                                    title: {
                                        display: true,
                                        text: 'Order Status Distribution'
                                    }
                                }
                            }
                        });
                    } else {
                        console.error('Order status data is undefined:', orderStatusCounts);
                    }
                } else {
                    console.error('Failed to fetch data:', response.statusText);
                }

            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        fetchData();
    });</script>

<script>document.addEventListener("DOMContentLoaded", function () {
        async function fetchData() {
            try {
                let response = await fetch('/api/admin/orders-price-per-year');
                let yearlyData = await response.json();

                console.log('Yearly Data:', yearlyData);

                if (yearlyData.years && yearlyData.ordersPrice) {

                    var ctx = document.getElementById('yearlyOrdersChart').getContext('2d');

                    var yearlyOrdersChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: yearlyData.years,
                            datasets: [{
                                label: 'Yearly Orders Price',
                                data: yearlyData.ordersPrice,
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    suggestedMax: Math.max(...yearlyData.ordersPrice) + 2000,
                                    ticks: {
                                        stepSize: Math.ceil((Math.max(...yearlyData.ordersPrice) + 2000) / 10)
                                    }
                                },
                                x: {
                                    ticks: {
                                        autoSkip: false
                                    }
                                }
                            },
                            responsive: true
                        }
                    });
                } else {
                    console.error('Data is null or not in expected format:', yearlyData);
                }

            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        fetchData();
    });</script>
